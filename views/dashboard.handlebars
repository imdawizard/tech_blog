<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" type="text/css" href="../public/css/style.css">
</head>
<body>
    <h1>Welcome to Your Dashboard, {{username}}!</h1>
    
    <h2>Your Blog Posts</h2>
    
    {{#if blogposts.length}}
        <ul>
            {{#each blogposts}}
                <li>
                    <h3>{{title}}</h3>
                    <p>{{content}}</p>
                    <p>Created on {{date_created}}</p>
                    <p>
                        <!-- Button to trigger the update/delete function -->
                       <button onclick="updateBlogPost('{{id}}')">Update</button> |
                       <button onclick="deleteBlogPost('{{id}}')">Delete</button>
                    </p>
                </li>
            {{/each}}
        </ul>
    {{else}}
        <p>No blog posts available.</p>
    {{/if}}

    <a href="/newPost">Create New Blog Post</a>
</body>
<script>
    // Function to update a blog post
    function updateBlogPost(postId) {
        // Prompt the user for a new title and content
        const newTitle = prompt('Enter new title:');
        const newContent = prompt('Enter new content:');
        console.log('newTitle:', newTitle);
        console.log('newContent:', newContent);

        // Make a PUT request to update the post
        fetch(`api/blogposts/${postId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ title: newTitle, content: newContent }),
        })
        .then(response => {
            if (response.ok) {
                // Reload the page to see the updated data
                location.reload();
            } else {
                alert('Failed to update the blog post.');
                console.error(error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while updating the blog post.');
        });
    }
    function deleteBlogPost(postId) {
    // Confirm the delete action with the user
    const confirmDelete = confirm('Are you sure you want to delete this blog post?');

    if (!confirmDelete) {
        return;
    }

    // Make a DELETE request to delete the post
    fetch(`/api/blogposts/${postId}`, {
        method: 'DELETE',
    })
    .then(response => {
        if (response.ok) {
            // Reload the page to reflect the updated list
            window.location.reload();
        } else {
            window.location.reload();
            console.error('Error:', response.status);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while deleting the blog post.');
    });
}
</script>
</html>
